#!/usr/bin/env node

'use strict';

var readline = require('readline');
var cheerio = require('cheerio');
var program = require('commander');
var Askfm = require('../lib/askfm');

var colors = {
  red: '\u001b[31m',
  green: '\u001b[32m',
  white: '\u001b[37m',
  end: '\u001b[0m'
};

var keywords = /質問ではない。?|不?自由/g;

program
.version('0.0.1')
.option('-u, --user [username]', 'Specify who to ask. default: EzoeRyou', 'EzoeRyou')
.usage('[options] [question]')
.parse(process.argv);

var ask = new Askfm(program.user);
if (program.args.length === 0) {
  ask.getRss(function(rss) {
    showLog(rss);
  });
} else {
  var q = extractArgs(program.args);
  ask.checkLogin(function(token) {
    if (token) {
      getUserInfo(function(user) {
        ask.doLogin(token, user, function() {
          ask.postQuestion(q);
        });
      });
    } else {
      ask.postQuestion(q);
    }
  });
}

function getUserInfo(callback) {
  var rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
  });
  rl.question('User: ', function(user) {
    rl.question('Password: ', function(password) {
      rl.close();
      callback({login: user, password: password});
    });
  });
}

function extractArgs(args) {
  return args.reduce(function(previous, current) {
    return previous + ' ' + current;
  });
}

function showLog(rss) {
  var logs = [];
  var $ = cheerio.load(rss, {ignoreWhitespace: true, xmlMode: true});
  $('item').each(function(i, elem) {
    var link = $(this).children('link').text()
    var title = colors.red + $(this).children('title').text() + colors.end;
    var desc = $(this).children('description').text();
    desc = desc.replace(keywords, colors.green + '$&' + colors.end);
    logs.push({
      link: link,
      title: title,
      desc: desc
    });
  });
  logs.reverse().forEach(function(log) {
    console.log(log.link);
    console.log(log.title);
    console.log(log.desc);
    console.log();
  });
}
